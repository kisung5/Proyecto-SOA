# This is a basic workflow to help you get started with Actions

name: Build
on:
  push:
    branches:
      - main
      - kisung5-patch-1
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:

  api-service:
    name: Net Core API Build 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Check workspace
        run: ls
      - name: Confirm workspace
        run: ls
        working-directory: Backend/API_service
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
        working-directory: Backend/API_service
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: Backend/API_service
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        working-directory: Backend/API_service
  
  offensive-service:
    name: Net Service Build 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x' ]
    steps:
      - uses: actions/checkout@v2
      - name: Check workspace
        run: ls
      - name: Confirm workspace
        run: ls
        working-directory: Backend/Offensive_service
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
        working-directory: Backend/Offensive_service
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: Backend/Offensive_service
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        working-directory: Backend/Offensive_service

  sentiment-service:
    name: Net Sentiment Service Build 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check workspace
        run: ls
      - name: Confirm workspace
        run: ls
        working-directory: Backend/Sentiment_service
      - name: Setup .NET Core SDK 3.1.x
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies
        run: dotnet restore
        working-directory: Backend/Sentiment_service
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: Backend/Sentiment_service
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        working-directory: Backend/Sentiment_service

  websockets:
    name: WebSockets Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
      - name: Check workspace
        run: ls
      - name: Confirm workspace
        run: ls
        working-directory: webSocketServer
      - name: Install dependencies
        run: npm i
        working-directory: webSocketServer
      - name: Build
        run: npm start
        working-directory: webSocketServer
      - name: Test
        run: npm test
        working-directory: webSocketServer

  frontend:
    name: FrontEnd Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
      - name: Check workspace
        run: ls
      - name: Confirm workspace
        run: ls
        working-directory: FrontEnd
      - name: Install dependencies
        run: npm i
        working-directory: FrontEnd
      - name: Build
        run: npm run build
        working-directory: FrontEnd

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
